@model AlphaWorkout.Models.FitnessDashboardViewModel

@{
    ViewData["Title"] = "Fitness Dashboard";
}

<h1>@ViewData["Title"]</h1>

@if (Model.Steps.Any())
{
    <!-- Steps Visualization -->
    <h3>Steps</h3>
    <canvas id="stepsChart" width="400" height="200"></canvas>
    <script>
        var ctxSteps = document.getElementById('stepsChart').getContext('2d');
        var stepsData = {
            labels: @Html.Raw(Json.Serialize(Model.Steps.Select(s => s.Date.ToString("MM/dd/yyyy")).ToList())),
            datasets: [{
                label: 'Steps Taken',
                data: @Html.Raw(Json.Serialize(Model.Steps.Select(s => s.StepCount).ToList())),
                backgroundColor: 'rgba(54, 162, 235, 0.2)',
                borderColor: 'rgba(54, 162, 235, 1)',
                borderWidth: 1
            }]
        };
        var stepsChart = new Chart(ctxSteps, {
            type: 'line',
            data: stepsData,
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    </script>
}

@if (Model.WaterIntakes.Any())
{
    <!-- Water Intake Visualization -->
    <h3>Water Intake</h3>
    <canvas id="waterChart" width="400" height="200"></canvas>
    <script>
        var ctxWater = document.getElementById('waterChart').getContext('2d');
        var waterData = {
            labels: @Html.Raw(Json.Serialize(Model.WaterIntakes.Select(w => w.Date.ToString("MM/dd/yyyy")).ToList())),
            datasets: [{
                label: 'Water Intake (Liters)',
                data: @Html.Raw(Json.Serialize(Model.WaterIntakes.Select(w => w.Liters).ToList())),
                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 1
            }]
        };
        var waterChart = new Chart(ctxWater, {
            type: 'line',
            data: waterData,
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    </script>
}

@if (Model.CalorieIntakes.Any())
{
    <!-- Calorie Intake Visualization -->
    <h3>Calorie Intake</h3>
    <canvas id="calorieChart" width="400" height="200"></canvas>
    <script>
        var ctxCalorie = document.getElementById('calorieChart').getContext('2d');
        var calorieData = {
            labels: @Html.Raw(Json.Serialize(Model.CalorieIntakes.Select(c => c.Date.ToString("MM/dd/yyyy")).ToList())),
            datasets: [{
                label: 'Calorie Intake (kcal)',
                data: @Html.Raw(Json.Serialize(Model.CalorieIntakes.Select(c => c.Calories).ToList())),
                backgroundColor: 'rgba(255, 206, 86, 0.2)',
                borderColor: 'rgba(255, 206, 86, 1)',
                borderWidth: 1
            }]
        };
        var calorieChart = new Chart(ctxCalorie, {
            type: 'line',
            data: calorieData,
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    </script>
}

@if (Model.RunningDistances.Any())
{
    <!-- Running Distance Visualization -->
    <h3>Running Distance</h3>
    <canvas id="runningChart" width="400" height="200"></canvas>
    <script>
        var ctxRunning = document.getElementById('runningChart').getContext('2d');
        var runningData = {
            labels: @Html.Raw(Json.Serialize(Model.RunningDistances.Select(r => r.Date.ToString("MM/dd/yyyy")).ToList())),
            datasets: [{
                label: 'Running Distance (km)',
                data: @Html.Raw(Json.Serialize(Model.RunningDistances.Select(r => r.DistanceKm).ToList())),
                backgroundColor: 'rgba(153, 102, 255, 0.2)',
                borderColor: 'rgba(153, 102, 255, 1)',
                borderWidth: 1
            }]
        };
        var runningChart = new Chart(ctxRunning, {
            type: 'line',
            data: runningData,
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    </script>
}

@if (Model.Sleeps.Any())
{
    <!-- Sleep Visualization -->
    <h3>Sleep</h3>
    <canvas id="sleepChart" width="400" height="200"></canvas>
    <script>
        var ctxSleep = document.getElementById('sleepChart').getContext('2d');
        var sleepData = {
            labels: @Html.Raw(Json.Serialize(Model.Sleeps.Select(s => s.Date.ToString("MM/dd/yyyy")).ToList())),
            datasets: [{
                label: 'Sleep (hours)',
                data: @Html.Raw(Json.Serialize(Model.Sleeps.Select(s => s.Hours).ToList())),
                backgroundColor: 'rgba(255, 159, 64, 0.2)',
                borderColor: 'rgba(255, 159, 64, 1)',
                borderWidth: 1
            }]
        };
        var sleepChart = new Chart(ctxSleep, {
            type: 'line',
            data: sleepData,
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    </script>
}
